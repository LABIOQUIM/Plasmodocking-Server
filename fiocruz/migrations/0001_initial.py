# Generated by Django 4.2.4 on 2024-10-07 00:40

from django.db import migrations, models
import django.db.models.deletion
import fiocruz.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MacromoleculesFalciparumWithoutRedocking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('rec', models.CharField(max_length=200)),
                ('rec_fld', models.FileField(upload_to=fiocruz.models.macromolecule_upload_path)),
                ('gridsize', models.CharField(blank=True, max_length=200, null=True)),
                ('gridcenter', models.CharField(blank=True, max_length=200, null=True)),
                ('redocking', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'macromolecules_falciparum_without_redocking',
            },
        ),
        migrations.CreateModel(
            name='MacromoleculesFalciparumWithRedocking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('rec', models.CharField(max_length=200)),
                ('rec_fld', models.FileField(upload_to=fiocruz.models.macromolecule_upload_path)),
                ('gridsize', models.CharField(blank=True, max_length=200, null=True)),
                ('gridcenter', models.CharField(blank=True, max_length=200, null=True)),
                ('ligante_original', models.CharField(blank=True, max_length=200, null=True)),
                ('rmsd_redocking', models.CharField(blank=True, max_length=200, null=True)),
                ('energia_original', models.CharField(blank=True, max_length=200, null=True)),
                ('redocking', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'macromolecules_falciparum_with_redocking',
            },
        ),
        migrations.CreateModel(
            name='MacromoleculesVivaxWithRedocking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('rec', models.CharField(max_length=200)),
                ('rec_fld', models.FileField(upload_to=fiocruz.models.macromolecule_upload_path)),
                ('gridsize', models.CharField(blank=True, max_length=200, null=True)),
                ('gridcenter', models.CharField(blank=True, max_length=200, null=True)),
                ('ligante_original', models.CharField(blank=True, max_length=200, null=True)),
                ('rmsd_redocking', models.CharField(blank=True, max_length=200, null=True)),
                ('energia_original', models.CharField(blank=True, max_length=200, null=True)),
                ('redocking', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'macromolecules_vivax_with_redocking',
            },
        ),
        migrations.CreateModel(
            name='MacroPrepare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processo_name', models.CharField(max_length=200, null=True)),
                ('nome', models.CharField(max_length=200)),
                ('rec', models.CharField(max_length=200)),
                ('receptor_pdb', models.FileField(upload_to=fiocruz.models.arquivo)),
                ('receptor_pdbqt', models.FileField(null=True, upload_to=fiocruz.models.arquivo)),
                ('ligante_pdb', models.FileField(null=True, upload_to=fiocruz.models.arquivo)),
                ('gridsize', models.CharField(blank=True, max_length=200, null=True)),
                ('gridcenter', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserCustom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('active', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('role', models.CharField(choices=[('USER', 'User'), ('ADMIN', 'Admin')], default='USER', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='ProcessPlasmodocking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('ligante', models.FileField(blank=True, null=True, upload_to=fiocruz.models.ligante_arquivo)),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('resultado_final', models.TextField(default='Sem resultados')),
                ('status', models.CharField(choices=[('em fila', 'Em fila'), ('processando', 'Processando'), ('concluido', 'Conclu√≠do'), ('error', 'Erro')], default='em fila', max_length=20)),
                ('type', models.CharField(choices=[('vivax', 'Vivax'), ('falciparum', 'Falciparum')], default='falciparum', max_length=20)),
                ('redocking', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fiocruz.usercustom')),
            ],
            options={
                'db_table': 'process_plasmodocking',
            },
        ),
    ]
